{"version":3,"sources":["./src/app/api/endpoints/macrosegment.ts","./src/app/api/endpoints/question.ts","./src/app/api/request.ts","./src/environments/environment.ts","./src/app/api/endpoints/purchase_mission.ts","./src/app/utils/form_validators.ts","./src/app/pages/segments/segments.component.ts","./src/app/pages/segments/create-dialog.component.html","./src/app/pages/segments/edit-dialog.component.html","./src/app/pages/segments/segments.component.html","./src/app/pages/segments/property-creation-dialog.component.html","./src/app/pages/segments/programation-dialog.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/api/endpoints/politics.ts","./src/app/api/endpoints/segments.ts","./src/app/app.module.ts","./src/app/common/footer/footer.component.ts","./src/app/common/footer/footer.component.html","./src/app/api/endpoints/tipology.ts","./src/app/common/header/header.component.ts","./src/app/common/header/header.component.html","./src/app/app-routing.module.ts","./src/app/api/endpoints/programation.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { generateUrl } from \"../request\";\nimport {\n  ApiResponse,\n  Macrosegment as MacroSegmentInterface,\n} from \"../interfaces\";\n\n@Injectable({\n  providedIn: \"any\",\n})\nexport class Macrosegment {\n  #endpoint = \"macrosegments\";\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  public get() {\n    return this.http.get<ApiResponse<MacroSegmentInterface[]>>(\n      generateUrl(this.#endpoint).toString(),\n    ).toPromise();\n  }\n\n  public post(macrosegment: MacroSegmentInterface) {\n    return this.http.post<ApiResponse<{}>>(\n      generateUrl(this.#endpoint).toString(),\n      macrosegment,\n    ).toPromise();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { generateUrl } from \"../request\";\nimport { ApiResponse, Question as QuestionInterface } from \"../interfaces\";\n\n@Injectable({\n  providedIn: \"any\",\n})\nexport class Question {\n  #endpoint = \"questions\";\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  public get() {\n    return this.http.get<ApiResponse<QuestionInterface[]>>(\n      generateUrl(this.#endpoint).toString(),\n    ).toPromise();\n  }\n}\n","// TODO\n// Read this from ENV\n// Probably good to splice last character if it's slash\nconst API = \"https://canlfuncsegmdllo.azurewebsites.net/ARBOL_SEGMENTACION\";\n\n/** This will remove any parameter that doesn't have a value */\nexport const generateUrl = (\n  base: string,\n  params: Record<string, number | string | undefined> = {},\n) => {\n  const url = new URL(`${API}/${base}`);\n  for (const key in params) {\n    if (params[key] !== undefined) {\n      url.searchParams.append(key, String(params[key]));\n    }\n  }\n\n  return url;\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { generateUrl } from \"../request\";\nimport {\n  ApiResponse,\n  PurchaseMission as PurchaseMissionInterface,\n} from \"../interfaces\";\n\n@Injectable({\n  providedIn: \"any\",\n})\nexport class PurchaseMission {\n  #endpoint = \"purchasemission\";\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  public get() {\n    return this.http.get<ApiResponse<PurchaseMissionInterface[]>>(\n      generateUrl(this.#endpoint).toString(),\n    ).toPromise();\n  }\n\n  public post(purchase_mission: PurchaseMissionInterface) {\n    return this.http.post<ApiResponse<{}>>(\n      generateUrl(this.#endpoint).toString(),\n      purchase_mission,\n    ).toPromise();\n  }\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function forbiddenValueValidator(value: string): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = control.value === value;\n    return forbidden ? { forbiddenName: { value: control.value } } : null;\n  };\n}\n","import { AfterViewInit, Component, Inject, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatAutocompleteSelectedEvent } from \"@angular/material/autocomplete\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatSlideToggleChange } from \"@angular/material/slide-toggle\";\nimport { MatTable } from \"@angular/material/table\";\nimport { CdkDragDrop } from \"@angular/cdk/drag-drop\";\nimport {\n  Macrosegment,\n  PoliticQuestion,\n  PoliticsAnd,\n  PoliticsOr,\n  PurchaseMission,\n  Question,\n  Segment,\n  SegmentParameter,\n  Tipology,\n} from \"../../api/interfaces\";\nimport { forbiddenValueValidator } from \"../../utils/form_validators\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Macrosegment as MacrosegmentService } from \"../../api/endpoints/macrosegment\";\nimport {\n  Politics,\n  Politics as PoliticsService,\n} from \"../../api/endpoints/politics\";\nimport { Programation as ProgramationService } from \"../../api/endpoints/programation\";\nimport { PurchaseMission as PurchaseMissionService } from \"../../api/endpoints/purchase_mission\";\nimport { Question as QuestionService } from \"../../api/endpoints/question\";\nimport { Segment as SegmentService } from \"../../api/endpoints/segments\";\nimport { Tipology as TipologyService } from \"../../api/endpoints/tipology\";\n\n@Component({\n  selector: \"property-creation-dialog\",\n  styles: [\n    `mat-form-field { width: 100%; }`,\n  ],\n  templateUrl: \"property-creation-dialog.component.html\",\n})\nexport class PropertyCreationDialog {\n  form: FormGroup;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {\n      forbidden_code: string;\n    },\n    private dialogRef: MatDialogRef<PropertyCreationDialog, SegmentParameter>,\n    private fb: FormBuilder,\n  ) {\n    this.form = this.fb.group({\n      code: [\"\", [\n        Validators.required,\n        forbiddenValueValidator(this.data.forbidden_code),\n      ]],\n      description: [\"\", Validators.required],\n    });\n  }\n\n  async onSubmit() {\n    const {\n      code,\n      description,\n    } = this.form.value;\n\n    this.dialogRef.close({\n      code,\n      description,\n    });\n  }\n}\n\n@Component({\n  selector: \"create-dialog\",\n  styles: [\n    `mat-form-field { width: 100%; }`,\n  ],\n  templateUrl: \"create-dialog.component.html\",\n})\nexport class CreateDialog implements AfterViewInit {\n  code?: string;\n  // This code will be used by segment parameters selectors to\n  // tell their parent component to open a new creation modal\n  // This code can't be passed as a value when creating a new property\n  readonly CREATE_CODE = \"Crear nuevo\";\n  form: FormGroup;\n  loading_macrosegments = true;\n  loading_purchase_mission = true;\n  loading_tipologies = true;\n  macrosegments: Macrosegment[] = [];\n  purchase_missions: PurchaseMission[] = [];\n  tipologies: Tipology[] = [];\n\n  constructor(\n    private create_property_dialog: MatDialog,\n    private fb: FormBuilder,\n    private macrosegment_service: MacrosegmentService,\n    private purchase_mission_service: PurchaseMissionService,\n    private segment_service: SegmentService,\n    private tipology_service: TipologyService,\n  ) {\n    this.form = this.fb.group({\n      active: false,\n      description: [\"\", Validators.required],\n      macrosegment: [\"\", Validators.required],\n      name: [\"\", Validators.required],\n      purchase_mission: [\"\", Validators.required],\n      tipology: [\"\", Validators.required],\n    });\n  }\n\n  async ngAfterViewInit() {\n    this.loadMacrosegments();\n    this.loadPurchaseMissions();\n    this.loadTipologies();\n  }\n\n  async loadMacrosegments() {\n    this.loading_macrosegments = true;\n    const { data: macrosegments } = await this.macrosegment_service.get();\n\n    this.macrosegments = macrosegments.sort(({ code: a }, { code: b }) =>\n      a.localeCompare(b)\n    );\n    this.loading_macrosegments = false;\n  }\n\n  async loadPurchaseMissions() {\n    this.loading_purchase_mission = true;\n    const { data: purchase_mission } = await this.purchase_mission_service\n      .get();\n\n    this.purchase_missions = purchase_mission.sort(({ code: a }, { code: b }) =>\n      a.localeCompare(b)\n    );\n    this.loading_purchase_mission = false;\n  }\n\n  async loadTipologies() {\n    this.loading_tipologies = true;\n    const { data: tipologies } = await this.tipology_service.get();\n\n    this.tipologies = tipologies.sort(({ code: a }, { code: b }) =>\n      a.localeCompare(b)\n    );\n    this.loading_tipologies = false;\n  }\n\n  async onMacrosegmentChange({ option }: MatAutocompleteSelectedEvent) {\n    if (option.value === this.CREATE_CODE) {\n      const macrosegment = await this.create_property_dialog.open<\n        PropertyCreationDialog,\n        { forbidden_code: string },\n        SegmentParameter\n      >(PropertyCreationDialog, {\n        width: \"600px\",\n        data: {\n          forbidden_code: this.CREATE_CODE,\n        },\n      })\n        .afterClosed()\n        .toPromise();\n\n      if (macrosegment) {\n        await this.macrosegment_service.post(macrosegment);\n        await this.loadMacrosegments();\n        this.form.get(\"macrosegment\")?.setValue(macrosegment.code);\n      }\n    }\n  }\n\n  async onPurchaseMissionChange({ option }: MatAutocompleteSelectedEvent) {\n    if (option.value === this.CREATE_CODE) {\n      const purchase_mission = await this.create_property_dialog.open<\n        PropertyCreationDialog,\n        { forbidden_code: string },\n        SegmentParameter\n      >(PropertyCreationDialog, {\n        width: \"600px\",\n        data: {\n          forbidden_code: this.CREATE_CODE,\n        },\n      })\n        .afterClosed()\n        .toPromise();\n\n      if (purchase_mission) {\n        await this.purchase_mission_service.post(purchase_mission);\n        await this.loadPurchaseMissions();\n        this.form.get(\"purchase_mission\")?.setValue(purchase_mission.code);\n      }\n    }\n  }\n\n  async onSubmit() {\n    const {\n      active,\n      description,\n      macrosegment,\n      name,\n      purchase_mission,\n      tipology,\n    } = this.form.value;\n\n    const response = await this.segment_service.create({\n      active,\n      description,\n      macrosegment,\n      name,\n      purchase_mission,\n      tipology,\n    });\n\n    this.code = response.data;\n  }\n\n  async onTipologyChange({ option }: MatAutocompleteSelectedEvent) {\n    if (option.value === this.CREATE_CODE) {\n      const tipology = await this.create_property_dialog.open<\n        PropertyCreationDialog,\n        { forbidden_code: string },\n        SegmentParameter\n      >(PropertyCreationDialog, {\n        width: \"600px\",\n        data: {\n          forbidden_code: this.CREATE_CODE,\n        },\n      })\n        .afterClosed()\n        .toPromise();\n\n      if (tipology) {\n        await this.tipology_service.post(tipology);\n        await this.loadTipologies();\n        this.form.get(\"tipology\")?.setValue(tipology.code);\n      }\n    }\n  }\n}\n\n/**\n * Can receive negative indexes, it will simply count all possible branches\n * */\nfunction getBranchIndex(operators: Array<\"AND\" | \"OR\">, index: number) {\n  let count = 0;\n  for (\n    const [i, value] of Object.entries(operators).sort(([a], [b]) =>\n      Number(a) > Number(b) ? -1 : 1\n    )\n  ) {\n    if (Number(i) === index) {\n      break;\n    } else if (value === \"OR\") {\n      count++;\n    }\n  }\n\n  return count + 1;\n}\n\nfunction questionAndOperatorToPolitics(\n  values: PoliticQuestion[],\n  operators: Array<\"AND\" | \"OR\">,\n): any {\n  if (values.length > 1) {\n    const last_branch = operators.filter((value) => value === \"OR\").length + 1;\n    if (last_branch !== 1) {\n      const result = { a: undefined, b: <PoliticQuestion[]> [] };\n      for (const [index, value] of Object.entries(values)) {\n        const operator_index = Number(index) - 1;\n        const branch = getBranchIndex(operators, operator_index);\n\n        if (branch !== last_branch) {\n          let current_node = result;\n          for (let x = 1; x <= branch; x++) {\n            if (x < branch) {\n              if (!current_node.a) {\n                // @ts-ignore\n                current_node.a = { a: undefined, b: <PoliticQuestion[]> [] };\n              }\n\n              // @ts-ignore\n              current_node = current_node.a;\n            } else {\n              current_node.b.push(value);\n            }\n          }\n        } else {\n          let current_node = result;\n          for (let x = 1; x <= branch; x++) {\n            if (x < (branch - 1)) {\n              if (!current_node.a) {\n                // @ts-ignore\n                current_node.a = { a: undefined, b: <PoliticQuestion[]> [] };\n              }\n\n              // @ts-ignore\n              current_node = current_node.a;\n            } else if (x === branch - 1) {\n              if (!current_node.a) {\n                // @ts-ignore\n                current_node.a = [];\n              }\n\n              // @ts-ignore\n              current_node.a.push(value);\n            }\n          }\n        }\n      }\n      return result;\n    } else {\n      return values;\n    }\n  } else {\n    return values;\n  }\n}\n\nfunction politicsToQuestionAndOperator(politics: PoliticsAnd | PoliticsOr) {\n  if (Array.isArray(politics)) {\n    return {\n      questions: politics,\n      operators: Array.from({ length: politics.length - 1 }, () => \"AND\"),\n    };\n  } else {\n    const operators: Array<\"AND\" | \"OR\"> = [];\n    const questions: PoliticQuestion[] = [];\n\n    function nested(object: PoliticsAnd | PoliticsOr) {\n      if (Array.isArray(object)) {\n        for (const [index, a] of Object.entries(object)) {\n          if (Number(index) !== object.length - 1) {\n            operators.push(\"AND\");\n          }\n          questions.push(a);\n        }\n      } else {\n        nested(object.a);\n        operators.push(\"OR\");\n        nested(object.b);\n      }\n    }\n\n    nested(politics);\n    return { questions, operators };\n  }\n}\n\n@Component({\n  selector: \"edit-dialog\",\n  styles: [\n    `mat-form-field { width: 100%; }`,\n  ],\n  templateUrl: \"edit-dialog.component.html\",\n})\nexport class EditDialog implements AfterViewInit {\n  // Set as loading as default, and only change\n  // after modal data has been initialized\n  loading = true;\n  questions: PoliticQuestion[] = [];\n  operators: Array<\"AND\" | \"OR\"> = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {\n      code: string;\n      questions: Question[];\n    },\n    private dialogRef: MatDialogRef<EditDialog>,\n    private politics_service: PoliticsService,\n  ) {}\n\n  addCondition() {\n    if (this.questions.length > 0) {\n      this.operators.push(\"AND\");\n      this.questions.push({\n        question: this.data.questions[0].code,\n        operator: \"=\",\n        value: \"SI\",\n      });\n    } else {\n      this.questions.push({\n        question: this.data.questions[0].code,\n        operator: \"=\",\n        value: \"SI\",\n      });\n    }\n  }\n\n  deletePolitic(index: number) {\n    if (this.questions.length > 1) {\n      this.operators = this.operators.filter((_, i) => i !== index);\n    }\n\n    this.questions = this.questions.filter((_, i) => i !== index);\n  }\n\n  async ngAfterViewInit() {\n    try {\n      const response = await this.politics_service.get(this.data.code);\n      const { operators, questions } = politicsToQuestionAndOperator(\n        response.data,\n      );\n      // @ts-ignore\n      this.operators = operators;\n      this.questions = questions;\n      this.loading = false;\n    } catch (e) {\n      if (e instanceof HttpErrorResponse) {\n        if (e.status !== 404) {\n          throw e;\n        }\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  onOperatorChange(index: number, value: \"AND\" | \"OR\") {\n    this.operators[index] = value;\n  }\n\n  onPoliticQuestionChange(index: number, value: string) {\n    this.questions[index].question = value;\n  }\n\n  onPoliticOperatorChange(index: number, value: string) {\n    this.questions[index].operator = value;\n  }\n\n  onPoliticValueChange(index: number, value: any) {\n    this.questions[index].value = value.value;\n  }\n\n  async onSubmit() {\n    this.loading = true;\n    await this.politics_service.update(\n      this.data.code,\n      questionAndOperatorToPolitics(this.questions, this.operators),\n    );\n    this.dialogRef.close();\n  }\n}\n\n// TODO\n// Add loading indicator\n@Component({\n  selector: \"programation-dialog\",\n  templateUrl: \"programation-dialog.component.html\",\n})\nexport class ProgramationDialog implements AfterViewInit {\n  form: FormGroup;\n\n  constructor(\n    private dialogRef: MatDialogRef<ProgramationDialog>,\n    private fb: FormBuilder,\n    private programation_service: ProgramationService,\n  ) {\n    this.form = this.fb.group({\n      end_date: [new Date(), Validators.required],\n      end_time: [new Date(), Validators.required],\n      frequency: [\"daily\", Validators.required],\n      start_date: [new Date(), Validators.required],\n      start_time: [new Date(), Validators.required],\n    });\n  }\n\n  async ngAfterViewInit() {\n    const { data: programation } = await this.programation_service.get();\n\n    this.form.get(\"end_date\")?.setValue?.(programation.end);\n    this.form.get(\"end_time\")?.setValue?.(programation.end);\n    this.form.get(\"frequency\")?.setValue?.(programation.frequency);\n    this.form.get(\"start_date\")?.setValue?.(programation.start);\n    this.form.get(\"start_time\")?.setValue?.(programation.start);\n  }\n\n  async onSubmit() {\n    const {\n      end_date,\n      end_time,\n      frequency,\n      start_date,\n      start_time,\n    } = this.form.value;\n\n    await this.programation_service.update({\n      end: end_date.toISOString().substring(0, 10) +\n        end_time.toISOString().substring(10),\n      frequency,\n      start: start_date.toISOString().substring(0, 10) +\n        start_time.toISOString().substring(10),\n    });\n\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: \"app-segments\",\n  styleUrls: [\"./segments.component.css\"],\n  templateUrl: \"./segments.component.html\",\n})\nexport class SegmentsComponent implements AfterViewInit {\n  displayedColumns = [\n    \"order\",\n    \"code\",\n    \"name\",\n    \"description\",\n    \"active\",\n    \"options\",\n  ];\n  dragDisabled = true;\n  isLoadingResults = true;\n  questions: Question[] = [];\n  segments: Segment[] = [];\n\n  @ViewChild(MatTable)\n  table?: MatTable<Segment>;\n\n  constructor(\n    public create_dialog: MatDialog,\n    public edit_dialog: MatDialog,\n    public programation_dialog: MatDialog,\n    private question_service: QuestionService,\n    private segment_service: SegmentService,\n  ) {}\n\n  async changeOrder({ currentIndex, previousIndex }: CdkDragDrop<Segment[]>) {\n    this.dragDisabled = true;\n    const new_priority = currentIndex + 1;\n    const segment = this.segments.find(({ execution_priority }) =>\n      execution_priority === (previousIndex + 1)\n    );\n    if (!segment) {\n      throw new Error(\n        `Couldn't find the selected segment with table index: ${previousIndex}`,\n      );\n    }\n\n    await this.segment_service.update(segment.code, {\n      execution_priority: new_priority,\n    });\n    await this.reloadData();\n  }\n\n  async deleteRow(code: string) {\n    await this.segment_service.delete(code);\n    await this.reloadData();\n  }\n\n  async ngAfterViewInit() {\n    await this.reloadData();\n    this.questions = (await this.question_service.get()).data;\n  }\n\n  async openCreateDialog() {\n    const dialog = this.create_dialog.open(CreateDialog, {\n      width: \"900px\",\n    });\n\n    dialog\n      .afterClosed()\n      .subscribe(() => this.reloadData());\n  }\n\n  async openEditDialog(code: string) {\n    this.edit_dialog.open(EditDialog, {\n      data: {\n        code,\n        questions: this.questions,\n      },\n      width: \"1000px\",\n    });\n  }\n\n  async openProgramationDialog() {\n    this.programation_dialog.open(ProgramationDialog, {\n      width: \"900px\",\n    });\n  }\n\n  async reloadData() {\n    this.isLoadingResults = true;\n\n    const { data } = await this.segment_service.getAll();\n\n    this.isLoadingResults = false;\n    this.segments = data;\n    this.table!.renderRows();\n  }\n\n  async switchRowStatus(code: string, { checked }: MatSlideToggleChange) {\n    await this.segment_service.update(code, { active: checked });\n    await this.reloadData();\n  }\n}\n","<h1 mat-dialog-title>Crear segmento</h1>\n<mat-dialog-content class=\"mat-typography\">\n  <form [formGroup]=\"form\">\n    <h4><b>Elige un nombre</b></h4>\n    <p>\n      Nombrar tu segmento te permitira encontrarlo mas facilmente\n    </p>\n    <mat-form-field appearance=\"fill\">\n      <input matInput formControlName=\"name\">\n    </mat-form-field>\n    <h4><b>Describelo brevemente</b></h4>\n    <p>\n      Escribe de que se trata para que todos puedan entenderlo\n    </p>\n    <mat-form-field appearance=\"fill\">\n      <input matInput formControlName=\"description\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Macrosegmento</mat-label>\n      <input\n        [matAutocomplete]=\"macrosegment\"\n        formControlName=\"macrosegment\"\n        matInput\n        placeholder=\"Seleccione su macrosegmento\"\n        type=\"text\"\n      >\n      <mat-autocomplete autoActiveFirstOption #macrosegment=\"matAutocomplete\" (optionSelected)=\"onMacrosegmentChange($event)\">\n        <mat-option disabled class=\"loading\" *ngIf=\"loading_macrosegments\">\n          <mat-spinner diameter=\"35\"></mat-spinner>\n        </mat-option>\n        <ng-container *ngIf=\"!loading_macrosegments\">\n          <mat-option *ngFor=\"let option of macrosegments\" [value]=\"option.code\">\n            {{option.code}} - {{option.description}}\n          </mat-option>\n          <mat-option [value]=\"CREATE_CODE\">\n            Crear un nuevo macroproceso\n          </mat-option>\n        </ng-container>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Misi&oacute;n de compra</mat-label>\n      <input\n        [matAutocomplete]=\"purchase_mission\"\n        formControlName=\"purchase_mission\"\n        matInput\n        placeholder=\"Seleccione su misi&oacute;n de compra\"\n        type=\"text\"\n      >\n      <mat-autocomplete autoActiveFirstOption #purchase_mission=\"matAutocomplete\" (optionSelected)=\"onPurchaseMissionChange($event)\">\n        <mat-option disabled class=\"loading\" *ngIf=\"loading_purchase_mission\">\n          <mat-spinner diameter=\"35\"></mat-spinner>\n        </mat-option>\n        <ng-container *ngIf=\"!loading_purchase_mission\">\n          <mat-option *ngFor=\"let option of purchase_missions\" [value]=\"option.code\">\n            {{option.code}} - {{option.description}}\n          </mat-option>\n          <mat-option [value]=\"CREATE_CODE\">\n            Crear una nueva misi&oacute;n de compra\n          </mat-option>\n        </ng-container>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Tipolog&iacute;a</mat-label>\n      <input\n        [matAutocomplete]=\"tipology\"\n        formControlName=\"tipology\"\n        matInput\n        placeholder=\"Seleccione su misi&oacute;n de compra\"\n        type=\"text\"\n      >\n      <mat-autocomplete autoActiveFirstOption #tipology=\"matAutocomplete\" (optionSelected)=\"onTipologyChange($event)\">\n        <mat-option disabled class=\"loading\" *ngIf=\"loading_tipologies\">\n          <mat-spinner diameter=\"35\"></mat-spinner>\n        </mat-option>\n        <ng-container *ngIf=\"!loading_tipologies\">\n          <mat-option *ngFor=\"let option of tipologies\" [value]=\"option.code\">\n            {{option.code}} - {{option.description}}\n          </mat-option>\n          <mat-option [value]=\"CREATE_CODE\">\n            Crear una nueva tipolog&iacute;a\n          </mat-option>\n        </ng-container>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-slide-toggle formControlName=\"active\">\n      Deseas activar el segmento inmediatamente?\n    </mat-slide-toggle>\n    <div *ngIf=\"!!code\">\n      <h4><b>El codigo de tu segmento es:</b></h4>\n      <p>\n        {{code}}\n      </p>\n    </div>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button mat-dialog-close>Cerrar</button>\n  <button\n    (click)=\"onSubmit()\"\n    [disabled]=\"form.status === 'INVALID' || !!code\"\n    color=\"accent\"\n    mat-raised-button\n  >Guardar y seguir despu&eacute;s</button>\n</mat-dialog-actions>\n","\n\n<h1 mat-dialog-title>Editar segmento</h1>\n<mat-dialog-content class=\"mat-typography\">\n  <h4><b>Crea condiciones</b></h4>\n  <p>\n    Elige preguntas y configura parametros para crear las condiciones de tu segmento\n  </p>\n  <div *ngFor=\"let question of questions; index as i\">\n    <mat-grid-list cols=\"5\" gutterSize=\"50px\" rowHeight=\"60px\">\n      <mat-grid-tile colspan=\"2\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Selecciona una pregunta</mat-label>\n          <mat-select [value]=\"question.question\" (selectionChange)=\"onPoliticQuestionChange(i, $event.value)\">\n            <mat-option *ngFor=\"let question of data.questions\" [value]=\"question.code\">\n              {{question.question}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile colspan=\"1\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Selecciona un operador</mat-label>\n          <mat-select [value]=\"question.operator\" (selectionChange)=\"onPoliticOperatorChange(i, $event.value)\">\n            <mat-option value=\"=\">=</mat-option>\n            <mat-option value=\"<\"><</mat-option>\n            <mat-option value=\">\">></mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile colspan=\"1\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Ingresa un valor</mat-label>\n          <input matInput type=\"text\" [value]=\"question.value\" (input)=\"onPoliticValueChange(i, $event.target)\" />\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile colspan=\"1\">\n        <button mat-icon-button color=\"primary\" (click)=\"deletePolitic(i)\">\n          <mat-icon>delete_sweep</mat-icon>\n        </button>\n      </mat-grid-tile>\n    </mat-grid-list>\n\n    <div *ngIf=\"i < questions.length - 1\">\n      <mat-grid-list cols=\"3\" gutterSize=\"50px\" rowHeight=\"60px\">\n        <mat-grid-tile colspan=\"1\">\n          <mat-form-field appearance=\"fill\">\n            <mat-select [value]=\"operators[i]\" (selectionChange)=\"onOperatorChange(i, $event.value)\">\n              <mat-option value=\"AND\">AND</mat-option>\n              <mat-option value=\"OR\">OR</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n  <button mat-button color=\"accent\" (click)=\"addCondition()\">Agregar otra pregunta?</button>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button mat-dialog-close>Cerrar</button>\n  <button mat-raised-button color=\"accent\" (click)=\"onSubmit()\">Guardar</button>\n</mat-dialog-actions>\n","<div id=\"options\">\n  <div id=\"buttons\">\n    <button\n        color=\"accent\"\n        mat-raised-button\n        (click)=\"openProgramationDialog()\"\n      >Programar</button>\n      <button\n        color=\"accent\"\n        mat-raised-button\n      >Ejecutar ahora</button>\n      <button\n        color=\"accent\"\n        mat-raised-button\n        (click)=\"openCreateDialog()\"\n      >Nuevo segmento</button>\n  </div>\n</div>\n\n<div class=\"table-container mat-elevation-z8\">\n  <div class=\"loading-container\" *ngIf=\"isLoadingResults\">\n    <mat-spinner></mat-spinner>\n  </div>\n\n  <div class=\"table\">\n    <table\n      cdkDropList\n      (cdkDropListDropped)=\"changeOrder($event)\"\n      [dataSource]=\"segments\"\n      mat-table\n      [cdkDropListData]=\"segments\" \n      [cdkDropListDisabled]=\"dragDisabled\"\n    >\n      <ng-container matColumnDef=\"order\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-icon (mousedown)=\"dragDisabled = false\">menu</mat-icon>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"code\">\n        <th mat-header-cell *matHeaderCellDef>C&oacute;digo</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.code}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Nombre</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef>Descripci&oacute;n</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.description}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"active\">\n        <th mat-header-cell *matHeaderCellDef class=\"text-align-center\">\n          Estado\n        </th>\n        <td mat-cell *matCellDef=\"let row\" class=\"text-align-center\">\n          <mat-slide-toggle [checked]=\"row.active\" (change)=\"switchRowStatus(row.code, $event)\"></mat-slide-toggle>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"options\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let row\" class=\"text-align-center\">\n          <button mat-icon-button mat-button [matMenuTriggerFor]=\"menu\">\n            <mat-icon>edit_note</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button mat-menu-item (click)=\"openEditDialog(row.code)\">Editar segmento</button>\n            <button mat-menu-item (click)=\"deleteRow(row.code)\">Eliminar segmento</button>\n          </mat-menu>\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" cdkDrag [cdkDragData]=\"row\"></tr>\n    </table>\n  </div>\n</div>\n","<h1 mat-dialog-title>Crear propiedad</h1>\n<mat-dialog-content class=\"mat-typography\">\n  <form [formGroup]=\"form\">\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Nombre</mat-label>\n      <input matInput formControlName=\"code\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Descripcion</mat-label>\n      <input matInput formControlName=\"description\">\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button mat-dialog-close>Cerrar</button>\n  <button\n    (click)=\"onSubmit()\"\n    [disabled]=\"form.status === 'INVALID'\"\n    color=\"accent\"\n    mat-raised-button\n  >Guardar</button>\n</mat-dialog-actions>\n","<h1 mat-dialog-title>Programar Ejecuci&oacute;n</h1>\n<mat-dialog-content class=\"mat-typography\">\n  <h4><b>Configura los tiempos</b></h4>\n  <p>\n    Selecciona una fecha de inicio y una periodicidad para ejecutar las actividades de los\n    segmentos\n  </p>\n  <form [formGroup]=\"form\">\n    <h4><b>Inicio</b></h4>\n    <mat-grid-list cols=\"3\" rowHeight=\"130px\">\n      <mat-grid-tile>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Seleccione una fecha</mat-label>\n        <input matInput [matDatepicker]=\"start_picker\" formControlName=\"start_date\">\n        <mat-datepicker-toggle matSuffix [for]=\"start_picker\"></mat-datepicker-toggle>\n        <mat-datepicker #start_picker></mat-datepicker>\n      </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <ngx-mat-timepicker\n          [enableMeridian]=\"true\"\n          formControlName=\"start_time\"\n        ></ngx-mat-timepicker>\n      </mat-grid-tile>\n    </mat-grid-list>\n    <h4><b>Terminaci&oacute;n</b></h4>\n    <mat-grid-list cols=\"3\" rowHeight=\"130px\">\n      <mat-grid-tile>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Seleccione una fecha</mat-label>\n          <input matInput [matDatepicker]=\"end_picker\" formControlName=\"end_date\">\n          <mat-datepicker-toggle matSuffix [for]=\"end_picker\"></mat-datepicker-toggle>\n          <mat-datepicker #end_picker></mat-datepicker>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <ngx-mat-timepicker\n          [enableMeridian]=\"true\"\n          formControlName=\"end_time\"\n        ></ngx-mat-timepicker>\n      </mat-grid-tile>\n    </mat-grid-list>\n    <h4><b>Periodicidad</b></h4>\n    <mat-grid-list cols=\"3\" rowHeight=\"130px\">\n      <mat-grid-tile>\n        <mat-form-field appearance=\"fill\">\n          <mat-select formControlName=\"frequency\">\n            <mat-option value=\"daily\">Diariamente</mat-option>\n            <mat-option value=\"weekly\">Semanalmente</mat-option>\n            <mat-option value=\"monthly\">Mensualmente</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button mat-dialog-close>Cerrar</button>\n  <button\n    (click)=\"onSubmit()\"\n    color=\"accent\"\n    [disabled]=\"form.status === 'INVALID'\"\n    mat-raised-button\n  >Guardar</button>\n</mat-dialog-actions>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  title = \"extractor\";\n}\n","<div id=\"content\">\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n</div>\n<app-footer id=\"footer\"></app-footer>","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { generateUrl } from \"../request\";\nimport { ApiResponse, PoliticsAnd, PoliticsOr } from \"../interfaces\";\n\n@Injectable({\n  providedIn: \"any\",\n})\nexport class Politics {\n  #endpoint = \"politics\";\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  public get(code: string) {\n    return this.http.get<ApiResponse<PoliticsAnd | PoliticsOr>>(\n      generateUrl(`${this.#endpoint}/${code}`).toString(),\n    ).toPromise();\n  }\n\n  public update(code: string, politics: PoliticsAnd | PoliticsOr) {\n    return this.http.put<ApiResponse<PoliticsAnd | PoliticsOr>>(\n      generateUrl(`${this.#endpoint}/${code}`).toString(),\n      politics,\n    ).toPromise();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { generateUrl } from \"../request\";\nimport { ApiResponse, Segment as SegmentInterface } from \"../interfaces\";\n\n@Injectable({\n  providedIn: \"any\",\n})\nexport class Segment {\n  #endpoint = \"segments\";\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  /**\n   * Creates the new segment with basic data and returns the code assigned to the new segment\n   */\n  public create(\n    segment: Omit<SegmentInterface, \"code\" | \"execution_priority\">,\n  ) {\n    return this.http.post<ApiResponse<string>>(\n      generateUrl(this.#endpoint).toString(),\n      segment,\n    ).toPromise();\n  }\n\n  public delete(code: string) {\n    return this.http.delete<ApiResponse<{}>>(\n      generateUrl(`${this.#endpoint}/${code}`).toString(),\n    ).toPromise();\n  }\n\n  public getAll() {\n    return this.http.get<ApiResponse<SegmentInterface[]>>(\n      generateUrl(this.#endpoint).toString(),\n    ).toPromise();\n  }\n\n  public update(code: string, segment: Partial<SegmentInterface>) {\n    return this.http.put<ApiResponse<void>>(\n      generateUrl(`${this.#endpoint}/${code}`).toString(),\n      segment,\n    ).toPromise();\n  }\n}\n","import { AppRoutingModule } from \"./app-routing.module\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatGridListModule } from \"@angular/material/grid-list\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MAT_DATE_LOCALE, MatNativeDateModule } from \"@angular/material/core\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { NgModule } from \"@angular/core\";\nimport {\n  NgxMatDatetimePickerModule,\n  NgxMatNativeDateModule,\n  NgxMatTimepickerModule,\n} from \"@angular-material-components/datetime-picker\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from \"./app.component\";\nimport { FooterComponent } from \"./common/footer/footer.component\";\nimport { HeaderComponent } from \"./common/header/header.component\";\nimport {\n  CreateDialog,\n  EditDialog,\n  ProgramationDialog,\n  PropertyCreationDialog,\n  SegmentsComponent,\n} from \"./pages/segments/segments.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateDialog,\n    EditDialog,\n    FooterComponent,\n    HeaderComponent,\n    ProgramationDialog,\n    PropertyCreationDialog,\n    SegmentsComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    DragDropModule,\n    HttpClientModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatSortModule,\n    MatTableModule,\n    NgxMatDatetimePickerModule,\n    NgxMatNativeDateModule,\n    NgxMatTimepickerModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: \"es-ES\" },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"./footer.component.html\",\n  styleUrls: [\"./footer.component.css\"],\n})\nexport class FooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n}\n","<div>\n  <svg viewBox=\"0 0 500 150\" preserveAspectRatio=\"none\">\n    <path d=\"M457.18,25.07 C373.66,17.21 449.28,94.90 399.06,150.96 L500.00,149.50 L505.71,33.92 Z\"></path>\n    <image\n      href=\"../../../assets/postobon-blanco.png\"\n      height=\"80\"\n      preserveAspectRatio=\"none\"\n      width=\"70\"\n      x=\"425\"\n      y=\"50\"\n    ></image>\n  </svg>\n</div>","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { generateUrl } from \"../request\";\nimport { ApiResponse, Tipology as TipologyInterface } from \"../interfaces\";\n\n@Injectable({\n  providedIn: \"any\",\n})\nexport class Tipology {\n  #endpoint = \"tipology\";\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  public get() {\n    return this.http.get<ApiResponse<TipologyInterface[]>>(\n      generateUrl(this.#endpoint).toString(),\n    ).toPromise();\n  }\n\n  public post(tipology: TipologyInterface) {\n    return this.http.post<ApiResponse<{}>>(\n      generateUrl(this.#endpoint).toString(),\n      tipology,\n    ).toPromise();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.css\"],\n})\nexport class HeaderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n}\n","<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 180\">\n  <path d=\"M0,128L80,138.7C160,149,320,171,480,160C640,149,800,107,960,90.7C1120,75,1280,85,1360,90.7L1440,96L1440,0L1360,0C1280,0,1120,0,960,0C800,0,640,0,480,0C320,0,160,0,80,0L0,0Z\">\n  </path>\n  <text x=\"120\" y=\"70\">\n    PERFILADOR DE CLIENTES\n  </text>\n</svg>","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { SegmentsComponent } from \"./pages/segments/segments.component\";\n\nconst routes: Routes = [\n  { path: \"segmentos\", component: SegmentsComponent },\n  { path: \"\", redirectTo: \"segmentos\", pathMatch: \"full\" },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { generateUrl } from \"../request\";\nimport {\n  ApiResponse,\n  Programation as ProgramationInterface,\n  ProgramationFrequency,\n} from \"../interfaces\";\n\ninterface RawProgramation {\n  end: string;\n  frequency: ProgramationFrequency;\n  start: string;\n}\n\n@Injectable({\n  providedIn: \"any\",\n})\nexport class Programation {\n  #endpoint = \"programation\";\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  public get(): Promise<ApiResponse<ProgramationInterface>> {\n    return this.http.get<ApiResponse<RawProgramation>>(\n      generateUrl(this.#endpoint).toString(),\n    ).toPromise()\n      .then(({ data: { end, frequency, start }, message }) => {\n        return {\n          data: {\n            end: new Date(end),\n            frequency,\n            start: new Date(start),\n          },\n          message,\n        };\n      });\n  }\n\n  public update({ end, frequency, start }: RawProgramation) {\n    return this.http.put<ApiResponse<{}>>(\n      generateUrl(this.#endpoint).toString(),\n      <ProgramationInterface> {\n        end: new Date(end),\n        frequency,\n        start: new Date(start),\n      },\n    ).toPromise();\n  }\n}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}